// Generated by CoffeeScript 1.6.2
(function() {
  var adapters, contextStore, messageId;

  messageId = 0;

  contextStore = {};

  bone.io = function(source, options) {
    var adapter, _ref;

    adapter = (_ref = options.config) != null ? _ref.adapter : void 0;
    if (adapter == null) {
      adapter = 'socket.io';
    }
    return bone.io.adapters[adapter](source, options);
  };

  bone.io.defaults = {};

  bone.io.set = function(name, value) {
    return bone.io.defaults[name] = value;
  };

  adapters = bone.io.adapters = {};

  adapters['socket.io'] = function(source, options) {
    var io, name, route, _base, _base1, _base2, _base3, _fn, _fn1, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;

    io = {};
    if ((_ref = options.config) == null) {
      options.config = bone.io.defaults.config;
    }
    io.error = options.error;
    io.source = source;
    io.options = options;
    io.socket = options.config.socket;
    io.inbound = options.inbound;
    if ((_ref1 = io.inbound) == null) {
      io.inbound = {};
    }
    io.outbound = options.outbound;
    if ((_ref2 = io.outbound) == null) {
      io.outbound = {};
    }
    if ((_ref3 = (_base = io.inbound).middleware) == null) {
      _base.middleware = [];
    }
    if ((_ref4 = (_base1 = io.outbound).middleware) == null) {
      _base1.middleware = [];
    }
    if ((_ref5 = (_base2 = io.outbound).shortcuts) == null) {
      _base2.shortcuts = [];
    }
    if ((_ref6 = (_base3 = io.inbound).shortcuts) == null) {
      _base3.shortcuts = [];
    }
    _ref7 = io.outbound.shortcuts;
    _fn = function(route) {
      return io[route] = function(data, context) {
        if (data == null) {
          data = {};
        }
        if (bone.log != null) {
          bone.log("Outbound: [" + source + ":" + route + "]", data);
        }
        data._messageId = messageId += 1;
        contextStore[data._messageId] = context;
        return io.socket.emit("" + source + ":" + route, data);
      };
    };
    for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
      route = _ref7[_i];
      _fn(route);
    }
    _ref8 = io.inbound;
    _fn1 = function(name, route) {
      return io.socket.on("" + source + ":" + name, function(data) {
        var context;

        if (bone.log != null) {
          bone.log("Inbound: [" + source + ":" + name + "]", data);
        }
        context = contextStore[data._messageId];
        delete contextStore[data._messageId];
        if (context == null) {
          context = {};
        }
        context.route = name;
        context.data = data;
        return bone.async.eachSeries(io.inbound.middleware, function(callback, next) {
          return callback(data, context, next);
        }, function(error) {
          if ((error != null) && (io.error != null)) {
            return io.error(error);
          }
          return route.apply(io, [data, context]);
        });
      });
    };
    for (name in _ref8) {
      route = _ref8[name];
      if (name === 'middleware') {
        continue;
      }
      _fn1(name, route);
    }
    return io;
  };

}).call(this);
